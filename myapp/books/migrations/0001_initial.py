# Generated by Django 5.2.5 on 2025-08-30 12:20

import books.models
import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('name', models.CharField(max_length=50)),
                ('local_name', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='BookMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('canonical_title', models.CharField(max_length=255)),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='books', to=settings.AUTH_USER_MODEL)),
                ('original_language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='original_books', to='books.language')),
            ],
            options={
                'ordering': ['canonical_title'],
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.CharField(blank=True, max_length=255, unique=True, validators=[django.core.validators.RegexValidator(code='invalid_slug', message='Slug can contain any characters except whitespace and /\\?%*:|"<>', regex='^[^\\s/\\\\?%*:|"<>]+$')])),
                ('author', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('total_chapters', models.PositiveIntegerField(default=0)),
                ('total_words', models.PositiveIntegerField(default=0)),
                ('total_characters', models.PositiveIntegerField(default=0)),
                ('bookmaster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='books', to='books.bookmaster')),
                ('language', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='books.language')),
            ],
            options={
                'ordering': ['-created_at'],
            },
            bases=(models.Model, books.models.SlugGeneratorMixin),
        ),
        migrations.CreateModel(
            name='ChapterMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('canonical_title', models.CharField(max_length=255)),
                ('chapter_number', models.PositiveIntegerField()),
                ('bookmaster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chaptermasters', to='books.bookmaster')),
            ],
            options={
                'ordering': ['chapter_number'],
            },
        ),
        migrations.CreateModel(
            name='Chapter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=255)),
                ('slug', models.CharField(blank=True, max_length=255, validators=[django.core.validators.RegexValidator(code='invalid_slug', message='Slug can contain any characters except whitespace and /\\?%*:|"<>', regex='^[^\\s/\\\\?%*:|"<>]+$')])),
                ('content', models.TextField(help_text='Chapter content as plain text')),
                ('excerpt', models.TextField(blank=True, max_length=1000)),
                ('word_count', models.PositiveIntegerField(default=0)),
                ('character_count', models.PositiveIntegerField(default=0)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('translating', 'Translating'), ('scheduled', 'Scheduled'), ('published', 'Published'), ('archived', 'Archived')], default='draft', max_length=20)),
                ('published_at', models.DateTimeField(blank=True, null=True)),
                ('book', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='books.book')),
                ('chaptermaster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chapters', to='books.chaptermaster')),
            ],
            bases=(models.Model, books.models.SlugGeneratorMixin),
        ),
        migrations.CreateModel(
            name='TranslationJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.chapter')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('target_language', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='books.language')),
            ],
        ),
        migrations.AddIndex(
            model_name='chaptermaster',
            index=models.Index(fields=['canonical_title'], name='books_chapt_canonic_f1fcf6_idx'),
        ),
        migrations.AddIndex(
            model_name='chaptermaster',
            index=models.Index(fields=['bookmaster'], name='books_chapt_bookmas_386b39_idx'),
        ),
        migrations.AddIndex(
            model_name='chaptermaster',
            index=models.Index(fields=['chapter_number'], name='books_chapt_chapter_b9cbb6_idx'),
        ),
        migrations.AddIndex(
            model_name='chapter',
            index=models.Index(fields=['book', 'status'], name='books_chapt_book_id_8e54c4_idx'),
        ),
        migrations.AddIndex(
            model_name='chapter',
            index=models.Index(fields=['published_at', 'status'], name='books_chapt_publish_c4d96b_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='chapter',
            unique_together={('book', 'slug')},
        ),
        migrations.AddIndex(
            model_name='bookmaster',
            index=models.Index(fields=['canonical_title'], name='books_bookm_canonic_3c22e5_idx'),
        ),
        migrations.AddIndex(
            model_name='bookmaster',
            index=models.Index(fields=['owner'], name='books_bookm_owner_i_60a1fc_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['created_at'], name='books_book_created_572b47_idx'),
        ),
        migrations.AddIndex(
            model_name='book',
            index=models.Index(fields=['language', 'status'], name='books_book_languag_2c24ff_idx'),
        ),
        migrations.AddIndex(
            model_name='translationjob',
            index=models.Index(fields=['status'], name='books_trans_status_a9058f_idx'),
        ),
        migrations.AddIndex(
            model_name='translationjob',
            index=models.Index(fields=['created_at'], name='books_trans_created_c4a54c_idx'),
        ),
    ]
